---
networks:
  traefik_network:
    name: traefik_network
  redis_network:
    name: redis_network
  wireguard_network:
    name: wireguard_network
    driver: bridge

volumes:
  traefik_data:
    name: traefik_data
  wireguard_data:
    name: wireguard_data
  authelia_data:
    name: authelia_data
  redis_data:
    name: redis_data

services:
  traefik:
    image: traefik:latest
    hostname: traefik
    container_name: traefik
    restart: on-failure:3
    command:
      - "--log.level=INFO"
      - "--api.insecure=false"
      - "--api.dashboard=false"
      - "--providers.docker=true"
      - "--providers.docker.exposedByDefault=false"
      - "--global.sendAnonymousUsage=false"
      - "--global.checkNewVersion=false"
      # ---------------------------------- ACME --------------------------------------------
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge.propagation.delayBeforeChecks=5"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge.propagation.disableChecks=true"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge.provider=${MY_PROVIDER:?error}"
      - "--certificatesresolvers.letsencrypt.acme.email=myemail@mail.com"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge.resolvers=1.1.1.1:53,8.8.8.8:53"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      # -------------------------------- ENTRYPOINT -----------------------------------------
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.websecure.http.tls=true"
      - "--entrypoints.websecure.http.tls.certResolver=letsencrypt"
      - "--entrypoints.websecure.http.tls.domains[0].main=${MY_DOMAIN}"
      - "--entrypoints.websecure.http.tls.domains[0].sans=*.${MY_DOMAIN}"
      # -------------------------------- PROXY -----------------------------------------
      - "--entryPoints.web.forwardedHeaders.trustedIPs=10.0.0.0/8,172.16.0.0/12,192.168.0.0/16,fc00::/7"
      - "--entryPoints.web.proxyProtocol.trustedIPs=10.0.0.0/8,172.16.0.0/12,192.168.0.0/16,fc00::/7"
      - "--entryPoints.websecure.forwardedHeaders.trustedIPs=10.0.0.0/8,172.16.0.0/12,192.168.0.0/16,fc00::/7"
      - "--entryPoints.websecure.proxyProtocol.trustedIPs=10.0.0.0/8,172.16.0.0/12,192.168.0.0/16,fc00::/7"
      - "--entryPoints.web.forwardedHeaders.insecure=false"
      - "--entryPoints.web.proxyProtocol.insecure=false"
      - "--entryPoints.websecure.forwardedHeaders.insecure=false"
      - "--entryPoints.websecure.proxyProtocol.insecure=false"
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - traefik.enable=true
      - traefik.docker.network=traefik_network
      - traefik.http.routers.api.tls=true
      - traefik.http.routers.api.entryPoints=websecure
      - traefik.http.routers.api.service=api@internal
      - traefik.http.routers.api.tls.certresolver=letsencrypt
      - traefik.http.routers.api.rule=Host(`${MY_DOMAIN:?error}`)
    environment:
      DUCKDNS_TOKEN: "${DUCKDNS_TOKEN}"
      CLOUDFLARE_DNS_API_TOKEN: "${CLOUDFLARE_DNS_API_TOKEN}"
    ports:
      - 80:80/tcp
      - 443:443/tcp
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/localtime:/etc/localtime:ro
      - traefik_data:/letsencrypt
    networks:
      - traefik_network

  authelia-secrets-generator:
    image: veerendra2/secrets-generator:latest
    container_name: authelia_secrets_generator
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
    volumes:
      - authelia_data:/secrets

  authelia:
    image: authelia/authelia:latest
    container_name: authelia
    hostname: authelia
    restart: on-failure:3
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik_network
      - traefik.http.routers.authelia.entryPoints=websecure
      - traefik.http.routers.authelia.tls.certresolver=letsencrypt
      - traefik.http.routers.authelia.rule=Host(`auth.${MY_DOMAIN:?error}`)
      - traefik.http.routers.authelia.middlewares=authelia@docker
      - traefik.http.middlewares.authelia.forwardAuth.address=http://authelia:9091/api/authz/forward-auth
      - traefik.http.middlewares.authelia.forwardAuth.trustForwardHeader=true
      - traefik.http.middlewares.authelia.forwardAuth.authResponseHeaders=Remote-User,Remote-Groups,Remote-Email,Remote-Name
      - traefik.http.services.authelia.loadbalancer.server.port=9091
    depends_on:
      authelia-secrets-generator:
        condition: service_completed_successfully
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      X_AUTHELIA_CONFIG_FILTERS: template
      MY_DOMAIN: ${MY_DOMAIN:?error}
      AUTHELIA_IDENTITY_VALIDATION_RESET_PASSWORD_JWT_SECRET_FILE: /opt/JWT_SECRET
      AUTHELIA_SESSION_SECRET_FILE: /opt/SESSION_SECRET
      AUTHELIA_STORAGE_ENCRYPTION_KEY_FILE: /opt/STORAGE_ENCRYPTION_KEY
    networks:
      - traefik_network
      - redis_network
    volumes:
      - authelia_data:/opt
      - ./config:/config
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro

  wg-easy:
    image: ghcr.io/wg-easy/wg-easy:latest
    container_name: wg-easy
    hostname: wg-easy
    restart: on-failure:3
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - traefik.enable=true
      - traefik.docker.network=traefik_network
      - traefik.http.routers.wg-easy.tls=true
      - traefik.http.routers.wg-easy.entrypoints=websecure
      - traefik.http.routers.wg-easy.tls.certresolver=letsencrypt
      - traefik.http.routers.wg-easy.rule=Host(`wg.${MY_DOMAIN:?error}`)
      - traefik.http.routers.wg-easy.middlewares=authelia@docker
      - traefik.http.services.wg-easy.loadbalancer.server.port=51821
    depends_on:
      - authelia
      - traefik
    environment:
      LANG: en
      UI_CHART_TYPE: 2
      UI_ENABLE_SORT_CLIENTS: true
      UI_TRAFFIC_STATS: true
      WG_ALLOWED_IPS: "0.0.0.0/0,::/0"
      WG_DEFAULT_ADDRESS: 10.8.0.x
      WG_DEFAULT_DNS: 1.1.1.1,1.0.0.1
      WG_ENABLE_EXPIRES_TIME: true
      WG_ENABLE_ONE_TIME_LINKS: true
      WG_HOST: wg.${MY_DOMAIN:?error}
      WG_PERSISTENT_KEEPALIVE: 25
      WG_PORT: 51820
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - wireguard_data:/etc/wireguard
    ports:
      - "51820:51820/udp"
      - "51821:51821/tcp"
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv4.conf.all.src_valid_mark=1
    networks:
      wireguard_network:
      traefik_network:

  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    hostname: watchtower
    restart: on-failure:3
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - traefik.enable=false
    user: ${PUID:?error}:${PGID:?error}
    group_add:
      - 999
    environment:
      WATCHTOWER_CLEANUP: true
      WATCHTOWER_LABEL_ENABLE: true
      WATCHTOWER_HTTP_API_METRICS: true
      WATCHTOWER_ROLLING_RESTART: true
      WATCHTOWER_TIMEOUT: 30s
      WATCHTOWER_SCHEDULE: "0 8 * * *"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/localtime:/etc/localtime:ro

  init-change-ownership:
    image: busybox:latest
    command: chown -R ${PUID}:${PGID} /tmp/change-ownership
    environment:
      PUID: ${PUID:?error}
      PGID: ${PGID:?error}
    volumes:
      - redis_data:/tmp/change-ownership

  redis:
    image: redis:latest
    container_name: redis
    hostname: redis
    restart: on-failure:3
    labels:
      - com.centurylinklabs.watchtower.enable=true
    user: ${PUID:?error}:${PGID:?error}
    volumes:
      - redis_data:/data
    networks:
      - redis_network
